/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&mt {
    tapping-term-ms = <130>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp LWIN        &kp GRAVE  &kp Q  &kp W              &kp E            &kp R        &kp T            &kp Y            &kp U        &kp I    &kp O     &kp P                 &kp LBKT  &mt RWIN RBKT
            &mt LCTRL TAB  &kp A  &kp S              &kp D            &kp F        &kp G            &kp H            &kp J        &kp K    &kp L  &kp SEMI            &mt RCTRL SQT
          &mt LALT ESCAPE  &kp Z  &kp X              &kp C            &kp V        &kp B            &kp N            &kp M    &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_ALT BACKSLASH
                                         &lt RSE BACKSPACE  &mt LSHFT SPACE  &lt LWR RET    &lt LWR ENTER  &mt RSHFT SPACE  &lt RSE DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans                 &kp CAPS   &kp SCROLLLOCK       &kp PG_UP    &kp PRINTSCREEN   &kp HOME  &kp EQUAL      &kp KP_DIVIDE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS   &kp KP_NUMLOCK  &mt RGUI F12
        &mt LCTRL K_APPLICATION       &kp INSERT  &kp LEFT_ARROW       &kp UP_ARROW  &kp RIGHT  &kp MINUS    &kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6   &kp KP_PLUS  &mt RCTRL MINUS
                         &trans  &kp PAUSE_BREAK   &kp PAGE_DOWN     &kp DOWN_ARROW    &kp END   &kp PLUS    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3    &kp KP_DOT         &kp RALT
                                                                  &lt ADJ BACKSPACE     &trans     &trans             &trans           &trans      &lt ADJ DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM            &kp F1            &kp F2            &kp F3            &kp F4            &kp F5              &kp F6            &kp F7            &kp F8            &kp F9           &kp F10  &kp F11  &mt RGUI F12
         &kp LCTRL  &kp RS(NUMBER_1)  &kp RS(NUMBER_2)  &kp RS(NUMBER_3)  &kp RS(NUMBER_4)  &kp RS(NUMBER_5)    &kp RS(NUMBER_6)  &kp RS(NUMBER_7)  &kp RS(NUMBER_8)  &kp RS(NUMBER_9)  &kp RS(NUMBER_0)   &trans
            &trans      &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5        &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9      &kp NUMBER_0   &trans
                                                                  &trans            &trans       &lt ADJ RET       &lt ADJ ENTER            &trans            &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader  &out OUT_USB  &out OUT_BLE      &out OUT_TOG           &none             &none               &none       &none      &out OUT_TOG  &out OUT_BLE  &out OUT_USB  &bootloader  &sys_reset
             &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &kp C_PREVIOUS        &kp C_NEXT      &kp C_PREVIOUS  &kp C_NEXT      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_CLR
                 &trans  &bt BT_SEL 3  &bt BT_SEL 4  &kp K_CALCULATOR      &kp C_STOP  &kp C_PLAY_PAUSE    &kp C_PLAY_PAUSE  &kp C_STOP  &kp K_CALCULATOR  &bt BT_SEL 3  &bt BT_SEL 4       &trans
                                                               &trans          &trans            &trans              &trans      &trans            &trans
            >;
        };
    };
};
